[{"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\App.js":"1","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\index.js":"2","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Details\\Details.jsx":"3","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Details\\styles.js":"4","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\styles.js":"5","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\styles.js":"6","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\Main.jsx":"7","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\Form\\styles.js":"8","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\Form\\Form.jsx":"9","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\List\\List.jsx":"10","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\context\\context.js":"11","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\context\\contextReducer.js":"12","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\utils\\formatDate.js":"13","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\useTransactions.js":"14","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\List\\styles.js":"15","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\SnackBar\\Snackbar.jsx":"16","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\InfoCard.jsx":"17","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\constants\\categories.js":"18","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\SnackBar\\styles.js":"19"},{"size":1374,"mtime":1609223124420,"results":"20","hashOfConfig":"21"},{"size":430,"mtime":1609218149807,"results":"22","hashOfConfig":"21"},{"size":684,"mtime":1609216480939,"results":"23","hashOfConfig":"21"},{"size":247,"mtime":1608755591746,"results":"24","hashOfConfig":"21"},{"size":582,"mtime":1608755672882,"results":"25","hashOfConfig":"21"},{"size":514,"mtime":1608756250007,"results":"26","hashOfConfig":"21"},{"size":1244,"mtime":1609223670071,"results":"27","hashOfConfig":"21"},{"size":247,"mtime":1608756897724,"results":"28","hashOfConfig":"21"},{"size":5172,"mtime":1609222122513,"results":"29","hashOfConfig":"21"},{"size":1719,"mtime":1609214216948,"results":"30","hashOfConfig":"21"},{"size":1714,"mtime":1609223405139,"results":"31","hashOfConfig":"21"},{"size":652,"mtime":1609220463501,"results":"32","hashOfConfig":"21"},{"size":317,"mtime":1609215194551,"results":"33","hashOfConfig":"21"},{"size":1155,"mtime":1609223397345,"results":"34","hashOfConfig":"21"},{"size":416,"mtime":1608757716434,"results":"35","hashOfConfig":"21"},{"size":901,"mtime":1609222128088,"results":"36","hashOfConfig":"21"},{"size":446,"mtime":1609222673667,"results":"37","hashOfConfig":"21"},{"size":1765,"mtime":1609214335090,"results":"38","hashOfConfig":"21"},{"size":206,"mtime":1609221413439,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1spuqwk",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\App.js",["83","84","85"],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\index.js",[],["86","87"],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Details\\Details.jsx",[],["88","89"],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Details\\styles.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\styles.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\styles.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\Form\\Form.jsx",["90","91"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport CustomizedSnackbar from \"../../SnackBar/Snackbar\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setformData] = useState(initialState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\")) {\r\n      return;\r\n    }\r\n    const transaction = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n    setOpen(true);\r\n    addTransaction(transaction);\r\n    setformData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setformData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setformData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setformData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((entity) => {\r\n        const category = `${entity.value.charAt(0)}${entity.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n        switch (entity.type) {\r\n          case \"amount\":\r\n            setformData({ ...formData, amount: entity.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setformData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((eC) => eC.type).includes(category)\r\n            ) {\r\n              setformData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setformData({ ...formData, date: entity.value });\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment && segment.words.map((w) => w.value).join(\" \")}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setformData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setformData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          fullWidth\r\n          value={formData.amount}\r\n          onChange={(e) => setformData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Date\"\r\n          fullWidth\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setformData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\context\\context.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\context\\contextReducer.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\utils\\formatDate.js",["92"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) {\r\n    month = `0${month}`;\r\n  }\r\n  if (day.length < 2) {\r\n    day = `0${day}`;\r\n  }\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n","C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\useTransactions.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\SnackBar\\Snackbar.jsx",[],["93","94"],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\InfoCard.jsx",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\constants\\categories.js",[],"C:\\Users\\migueis\\Desktop\\voice-powered-expense-tracker\\src\\components\\SnackBar\\styles.js",[],{"ruleId":"95","severity":1,"message":"96","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":34},{"ruleId":"95","severity":1,"message":"99","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":21},{"ruleId":"95","severity":1,"message":"100","line":8,"column":23,"nodeType":"97","messageId":"98","endLine":8,"endColumn":39},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":89,"column":11,"nodeType":"109","messageId":"110","endLine":90,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":104,"column":6,"nodeType":"113","endLine":104,"endColumn":15,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","endLine":15,"endColumn":3},{"ruleId":"101","replacedBy":"118"},{"ruleId":"103","replacedBy":"119"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'SpeechState' is defined but never used.","'UseSpeechContext' is defined but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],["120"],["121"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setformData(f => ...)' if you only need 'formData' in the 'setformData' call.","ArrayExpression",["122"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["120"],["121"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"125","text":"126"},[2999,3008],"[createTransaction, formData, segment]"]